<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Jack Whiting</title>
    <link>https://jackwhiting.co.uk/categories/tools/</link>
    <description>Recent content in Tools on Jack Whiting</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 14 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jackwhiting.co.uk/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Moving to Figma</title>
      <link>https://jackwhiting.co.uk/posts/moving-to-figma/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jackwhiting.co.uk/posts/moving-to-figma/</guid>
      <description>In the last 6 months, I&amp;rsquo;ve moved to using Figma on a permanent basis. I&amp;rsquo;d spent a fair bit of time in and out of the beta, and now with the official launch, it feels more stable and ready for full time use than ever.
With I first tried Figma up it was a bit rough around the edges, it needed refinement and missed some of the fundamentals I was used to, such as Symbols (Sketch had tainted me).</description>
    </item>
    
    <item>
      <title>Setting Up A Windows 10 Development Environment with WSL, PHP &amp; Laravel</title>
      <link>https://jackwhiting.co.uk/posts/setting-up-a-windows-10-development-environment-with-wsl-php-laravel/</link>
      <pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jackwhiting.co.uk/posts/setting-up-a-windows-10-development-environment-with-wsl-php-laravel/</guid>
      <description>Preface Recently, I&amp;rsquo;ve been toying around with the use of WSL (Windows Subsystem for Linux) for development. I&amp;rsquo;ve used a Mac for development work over better part of the last decade and required the Windows setup to mimic my workflow.
Typically, I create Laravel applications along with the occasional WordPress site, using the following tools:
 Nginx PHP MySql Dnsmasq Valet  After a bit of testing and reconfiguration, I managed to get WSL setup with the above in a few easy steps and I&amp;rsquo;m relatively happy with the workflow.</description>
    </item>
    
    <item>
      <title>Beautiful, organised results in PHPUnit</title>
      <link>https://jackwhiting.co.uk/posts/beautiful-organised-results-in-phpunit/</link>
      <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jackwhiting.co.uk/posts/beautiful-organised-results-in-phpunit/</guid>
      <description>PHPUnit Pretty Result Printer is a beautiful little extension for PHPUnit that cleans up and organises the output of tests. I&amp;rsquo;d highly recommend this for anyone using PHPUnit.
For installation instructions visit the official repository https://github.com/mikeerickson/phpunit-pretty-result-printer.</description>
    </item>
    
    <item>
      <title>Chrome 63 Forces Redirection of .dev Domains to HTTPS</title>
      <link>https://jackwhiting.co.uk/posts/chrome-63-forces-dev-domains-to-https/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jackwhiting.co.uk/posts/chrome-63-forces-dev-domains-to-https/</guid>
      <description>Chrome 63 (out since December 2017), will force all domains ending on .dev (and .foo) to be redirected to HTTPS via a preloaded HTTP Strict Transport Security (HSTS) header.
 You can find out more about this change at https://ma.ttias.be/chrome-force-dev-domains-https-via-preloaded-hsts/
As long as I can remember, I&amp;rsquo;ve used .dev as a preference for local domains. It seemed like the industry standard and was recommend by a lot of developers. When I woke up to find all my .</description>
    </item>
    
    <item>
      <title>Setting Up and Using Yarn</title>
      <link>https://jackwhiting.co.uk/posts/setting-up-and-using-yarn/</link>
      <pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jackwhiting.co.uk/posts/setting-up-and-using-yarn/</guid>
      <description>If you haven&amp;rsquo;t heard of Yarn before, it is a Package Manager for JavaScript (which replaces the existing workflow used with the NPM client). Yarn shares a similar workflow, but puts security, speed and reliability at the forefront.
Why Yarn Over NPM? So, what makes Yarn better than just carrying on using NPM?
Speed, Yarn caches packages so it doesn&amp;rsquo;t need to downloaded it again and again. It also runs the process parallel so the runtime is a lot shorter.</description>
    </item>
    
    <item>
      <title>Using Visual Studio Code (with 5  Recommended Extensions)</title>
      <link>https://jackwhiting.co.uk/posts/using-vs-code-and-recommended-extensions/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jackwhiting.co.uk/posts/using-vs-code-and-recommended-extensions/</guid>
      <description>I constantly toy with which IDE/Text Editor I want to use in my workflow. I’ve tried six or seven in the last few months to find something that fits my personal work flow and always ended up reverting to Sublime Text 3.
I require my editor to be customisable, is extendable and has support for colour schemes (it’s the little things). When I stumbled on Visual Studio (VS) Code recently and found that it and ticked all of my boxes, I decided to dive in and test it out.</description>
    </item>
    
  </channel>
</rss>